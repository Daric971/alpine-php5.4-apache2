FROM alpine:3.11

MAINTAINER Daric DESBONNES <desbonnesdaric@yahoo.fr>
LABEL version="1"
LABEL description="Apache 2 / PHP & ssl support - Alpine instance support"

# update & upgrade first
RUN apk update && apk --no-cache upgrade

#Install apache2 & memcached
RUN apk add memcached apache2

#Basic copoments installation
RUN apk add --no-cache curl
RUN apk add apache2-proxy apache2-ssl openssl apache2-utils

#declaration of variables
# persistent / runtime deps
ENV PHPIZE_DEPS \
		autoconf \
		file \
		g++ \
		gcc \
		libc-dev \
		make \
		pkgconf \
		re2c

ENV PHP_INI_DIR /usr/local/etc/php
##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
##</autogenerated>##
ENV PHP_VERSION 5.4.45
ENV PHP_SHA1SUM 06ece3f8b53d6f4209d414a95f288771ff8f9247
ENV PHP_URL="https://secure.php.net/get/php-5.4.45.tar.gz/from/this/mirror"

RUN apk add --no-cache --virtual .persistent-deps \
		ca-certificates \
		openldap-dev \
		curl \
		tar \
		xz

# ensure www-data user exists
RUN set -x \
    #addgroup www-data
    adduser -u 82 -D -S -G www-data www-data
# 82 is the standard uid/gid for "www-data" in Alpine

RUN mkdir -p $PHP_INI_DIR/conf.d

#useful components for compiling php
RUN set -xe \
    && apk update && apk upgrade && apk add \
    coreutils \
    freetype-dev \
    libjpeg-turbo-dev \
    libltdl \
    libmcrypt-dev \
	  && apk add --no-cache --virtual .build-deps \
		$PHPIZE_DEPS \
		curl-dev \
		libedit-dev \
		libxml2-dev \
		openssl-dev \
		sqlite-dev \
    libpng-dev \
    libxpm-dev \
    libxslt-dev

#PHP download and extraction
RUN mkdir -p /usr/src/ \
    && cd /usr/src/ \
    && wget -O php.tar.gz "$PHP_URL" \
		&& if [ -n "$PHP_SHA1SUM" ]; then \
        echo "$PHP_SHA1SUM *php.tar.gz" | sha1sum -c -; \
        tar -zxf php.tar.gz ; \
    else \
        rm -f php.tar.gz; \
	      echo -e "\e[0;31m Security error \e[0m"; \
        echo "The downloaded file is not the correct one"; \
        echo "Possible man in the middle"; \
    fi
COPY docker-php-source /usr/src/docker-php-source

# php compilation
RUN cd /usr/src/php-5.4.45 \
	  && ./configure \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		\
		--disable-cgi \
		\
# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)
		--enable-ftp \
# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
		--enable-mbstring \
# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
		--enable-mysqlnd \
		--enable-mysql \
		--enable-json \
		--enable-gd \
		--enable-bcmath \
		\
		--with-curl \
		--with-libedit \
		--with-zlib \
		\
		$PHP_EXTRA_CONFIGURE_ARGS \
	  && make -j "$(getconf _NPROCESSORS_ONLN)" \
	  && make install \
	  && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \
	  && make clean \
	  && cd /usr/src/ \
  	&& /usr/src/docker-php-source delete \
	\
	  && runDeps="$( \
		scanelf --needed --nobanner --recursive /usr/local \
			| awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
			| sort -u \
			| xargs -r apk info --installed \
			| sort -u \
  	)" \
	  && apk add --no-cache --virtual .php-rundeps $runDeps \
  	\
  	&& apk del .build-deps

COPY docker-php-ext-* /usr/local/bin/

##<autogenerated>##
WORKDIR /var/www/


##</autogenerated>##

RUN /usr/local/bin/docker-php-ext-configure ldap --with-libdir=lib/
#&& /usr/local/bin/docker-php-ext-install ldap \
#&& /usr/local/bin/docker-php-ext-install -j$(nproc) iconv mcrypt \
#&& /usr/local/bin/docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
#&& /usr/local/bin/docker-php-ext-install -j$(nproc) gd

## create php.ini file
RUN cp /usr/src/php-5.4.45/php.ini-production /usr/src/php-5.4.45/php.ini

#remove unnecessary package
RUN set -xe \
    && apk del \
    freetype-dev \
    libjpeg-turbo-dev \
    libmcrypt-dev \
		curl-dev \
		libedit-dev \
		libxml2-dev \
		openssl-dev \
		sqlite-dev \
    libpng-dev \
    libxpm-dev \
    libxslt-dev \
		openldap-dev

## Apache configuration

# Display PHP ERRORS
RUN sed -i -e 's/^error_reporting\s*=.*/error_reporting = E_ALL \& ~E_STRICT \& ~E_NOTICE/' /usr/src/php-5.4.45/php.ini
RUN sed -i -e 's/^display_errors\s*=.*/display_errors = On/' /usr/src/php-5.4.45/php.ini
# puis je copie le php.ini (pas de lien symbolique)
RUN cp /usr/src/php-5.4.45/php.ini /usr/local/etc/php/php.ini

# Enabling Mod rewrite
ADD index.php /var/www/localhost/htdocs/
#si cela fonctionne pas alors essayer /etc/apache2/
ADD apache_default /etc/apache2/conf.d/
RUN mv /etc/apache2/conf.d/default.conf /etc/apache2/conf.d/default2.conf
RUN mv /etc/apache2/conf.d/apache_default /etc/apache2/conf.d/default.conf

# Enabling SSL
ADD apache_default_ssl /etc/apache2/conf.d/default-ssl
RUN mv /etc/apache2/conf.d/ssl.conf /etc/apache2/conf.d/ssl2.conf
RUN mv /etc/apache2/conf.d/default-ssl /etc/apache2/conf.d/ssl.conf
RUN mkdir /etc/apache2/sslconf
ADD apache.pem /etc/apache2/sslconf/apache.pem
ADD apache.key /etc/apache2/sslconf/apache.key

#integration des variables d'environnement
ENV APACHE_LOG_DIR /var/log/apache2

#ouverture des ports
EXPOSE 80 443
